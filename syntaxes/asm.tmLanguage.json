{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"scopeName": "text.vasm.oldstyle.asm",
	"foldingStartMarker": "^.+\\:$",
	"foldingStopMarker": "^!(  |\\\t)$",
	"patterns": [
		{ "include": "#comment" },
		{ "include": "#label" },
		{ "include": "#sections" },
		{ "include": "#directive" },
		{ "include": "#expression" },
		{ "include": "#userdefined" },
		{ "include": "#constant" }
	],
	"repository": {

		"comment": {
			"name": "comment.line",
			"match": "\\s*;.*$"
		},

		"label": {
			"match": "(?:^([a-z_]+):)|(?:^([a-z_]+) (macro)([^;]+)*)",
			"captures": {
				"1": {
					"name": "reference.label.asm"
				},
				"2": {
					"name": "reference.macro.asm"
				},
				"3": {
					"name": "directives.asm"
				},
				"4": {
					"name": "variable.pp"
				}
			}
		},

		"constant": {
			"name": "definition",
			"match": "^([A-Z_]+) *=([^;]+)",
			"captures": {
				"1": {
					"name": "reference.constant.asm"
				},
				"2": {
					"patterns": [ { "include": "#parameters" } ]
				}
			}
		},

		"parameters": {
			"begin": " ",
			"while": ",",
			"patterns": [
				{ "include": "#values" }
			]
		},

		"values": {
			"match": "(#)([^;]*)|([^#;]+)",
			"captures": {
				"1" : {
					"name": "imidiate.asm"
				},
				"2": {
					"name": "imidiate.asm",
					"patterns": [ { "include": "#values" } ]
				},
				"3": {
					"patterns": [
						{
							"name": "string.path",
							"match": "[\\/0-9A-z_\\-]+(\\.[0-9A-z]+|\\/)"
						},
						{
							"name": "variable.pp",
							"match": "\\\\[0-9A-z_]+"
						},
						{
							"name": "constant.numeric.hex",
							"match": "#?(\\$|0x)[0-9A-Fa-f]+"
						},
						{
							"name": "constant.numeric.octal",
							"match": "#?(0o)[0-8]+"
						},
						{
							"name": "constant.numeric.binary",
							"match": "#?(%|0b)[01]+"
						},
						{
							"name": "constant.numeric.decimal",
							"match": "#?(\\d)+"
						},
						{
							"name": "string.quoted",
							"match": "\".*?\""
						},
						{
							"name": "address.asm",
							"match": "(#?)[0-9A-z_\\-]"
						}
					]
				}
			}
		},

		"directive": {
			"match": "(?:^  | )\\.?(2byte|4byte|8byte|asciiz|ascii|align|balignl|balignw|balign|byte|comm|double|endmacro|endm|endr|equ|equiv|err|extern|fail|file|float|global|half|ifeq|ifne|ifgt|ifge|iflt|ifle|ifb|ifnb|ifdef|ifndef|if|incbin|incdir|include|int|irpc|irp|lcomm|list|local|long|macro|nolist|org|p2alignw|p2align|popsection|pushsection|quad|rept|section|set|size|short|single|skip|space|stabs|stabn|stabd|string|swbeg|type|uahalf|ualong|uaquad|uasort|uaword|weak|word|zero)([^;]*)",
			"captures": {
				"1": {
					"name": "directives.asm"
				},
				"2": {
					"patterns": [
						{ "include": "#parameters" }
					]
				}
			}
		},

		"sections": {
			"name": "storage",
			"match": "^\\.?(bss|data|rodata|sbss|sdata|sdata2|stab|stabstr|text|tocd|dpage)([^;]*)",
			"captures": {}
		},

		"expression": {
			"match": "(?:^  | )(adc|and|asl|bbr0|bbr1|bbr2|bbr3|bbr4|bbr5|bbr6|bbr7|bbs0|bbs1|bbs2|bbs3|bbs4|bbs5|bbs6|bbs7|bcc|bcs|beq|bit|bmi|bne|bpl|bra|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|phx|phy|pla|plp|plx|ply|rmb0|rmb1|rmb2|rmb3|rmb4|rmb5|rmb6|rmb7|rol|ror|rti|rts|sbc|sec|sed|sei|smb0|smb1|smb2|smb3|smb4|smb5|smb6|smb7|sta|stp|stx|sty|stz|tax|tay|trb|tsb|tsx|txa|txs|tya|wai)([^;]*)",
			"captures": {
				"1": {
					"name": "instructionname.asm"
				},
				"2": {
					"patterns": [
						{ "include": "#parameters" }
					]
				}
			}
		},

		"userdefined": {
			"match": "^  (\\S+)( [^;]*)?",
			"captures": {
				"1": {
					"name": "userdefined.asm"
				},
				"2": {
					"patterns": [
						{ "include": "#parameters" }
					]
				}
			}
		}
		
	}
}